package com.chunqiu.mrjuly.modules.install.controller;

import com.chunqiu.mrjuly.common.annotation.Log;
import com.chunqiu.mrjuly.common.persistence.BaseController;
import com.chunqiu.mrjuly.common.utils.UserUtils;
import com.chunqiu.mrjuly.common.vo.Grid;
import com.chunqiu.mrjuly.common.vo.GridParam;
import com.chunqiu.mrjuly.modules.adviertisement.service.AdviertisementTypeService;
import com.chunqiu.mrjuly.modules.install.model.Alerts;
import com.chunqiu.mrjuly.modules.install.model.Notification;
import com.chunqiu.mrjuly.modules.install.service.AlertsService;
import com.chunqiu.mrjuly.modules.install.service.NotificationService;
import lombok.extern.slf4j.Slf4j;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * 消息通知
 */
@Slf4j
@Controller
@RequestMapping(value = "${adminPath}/install/alerts")
public class AlertsController extends BaseController{

    @Autowired
    private AlertsService alertsService;
    @Autowired
    private NotificationService notificationService;
    @Autowired
    private AdviertisementTypeService adviertisementTypeService;
    /**
     * 登录到消息通知页面
     * @return
     */
    @Log("登录到消息通知页面")
    @RequestMapping("index")
    @RequiresPermissions("install:alerts:view")
    public String index(){
        return "install/alertsList";
    }

    /**
     * 初始化消息通知数据页面
     * @param alerts
     * @param param
     * @return
     */
    @Log("消息通知页面初始换列表")
    @ResponseBody
    @RequestMapping("list")
    @RequiresPermissions("install:alerts:view")
    public Grid list(Alerts alerts, GridParam param){
        alerts.setObjectId(UserUtils.getUser().getBusinessId());
        return alertsService.findPage(alerts, param);
    }
    @Log("平台消息初始换列表")
    @ResponseBody
    @RequestMapping("ShopList")
    @RequiresPermissions("install:alerts:view")
    public Grid ShopList(Alerts alerts, GridParam param){
        alerts.setObjectId(UserUtils.getUser().getBusinessId());
        return alertsService.findList1(alerts, param);
    }

    /**
     * 查看详情
     * @param alerts
     * @param model
     * @return
     */
    @Log("查看详情")
    @RequestMapping("form")
    @RequiresPermissions("install:alerts:view")
    public String form(Alerts alerts, ModelMap model) {
        Notification notification1 = new Notification();
        notification1.setId(alerts.getId());
        adviertisementTypeService.updateReadById(notification1);
        if (alerts.getTarget()==0){
            Notification notification = notificationService.getMessage(alerts.getId());
            if(notification.getNoticeForm()==1){
                model.addAttribute("noticeForm", notification.getCreateDate());
            }else if(notification.getNoticeForm()==2){
                model.addAttribute("noticeForm", notification.getScheduledReleaseTime());
            }
            model.addAttribute("notification", notification);
            return "install/notificationForm2";
        }else {
            alerts = alertsService.get(alerts.getId());
            model.addAttribute("alerts", alerts);
            if(alerts.getType()==1){
                model.addAttribute("type", "公告");
            }else if(alerts.getType()==2){
                model.addAttribute("type", "通知");
            }else if(alerts.getType()==3){
                model.addAttribute("type", "消息");
            }
            if (alerts.getNoticeForm() !=null){
                if(alerts.getNoticeForm()==1){
                    model.addAttribute("noticeForm", alerts.getCreateDate());
                }else if(alerts.getNoticeForm()==2){
                    model.addAttribute("noticeForm", alerts.getScheduledReleaseTime());
                }
            }else {
                model.addAttribute("noticeForm", alerts.getCreateDate());
            }
            return "install/alertsListForm";
        }

    }

}
