package com.chunqiu.mrjuly.modules.qrcode.controller;

import com.chunqiu.mrjuly.common.annotation.Limit;
import com.chunqiu.mrjuly.common.annotation.Log;
import com.chunqiu.mrjuly.common.persistence.BaseController;
import com.chunqiu.mrjuly.common.utils.DateUtils;
import com.chunqiu.mrjuly.common.utils.excel.ExportExcel;
import com.chunqiu.mrjuly.common.vo.Grid;
import com.chunqiu.mrjuly.common.vo.GridParam;
import com.chunqiu.mrjuly.common.vo.Json;
import com.chunqiu.mrjuly.modules.qrcode.model.QrCodeInfo;
import com.chunqiu.mrjuly.modules.qrcode.service.QrCodeInfoService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.List;

/**
 * 二维码详情Controller
 * @author chen
 * @version 2019-03-19
 */
@Slf4j
@Controller
@RequestMapping(value = "${adminPath}/qrcode/qrCodeInfo")
public class QrCodeInfoController extends BaseController {

	@Autowired
	private QrCodeInfoService qrCodeInfoService;
	
	/**
	 * @Description：二维码详情列表页面
	 * @author chen
	 */
	@Log("打开二维码详情列表页面")
	@RequestMapping("index")
	public String index(QrCodeInfo qrCodeInfo,ModelMap modelMap){
		modelMap.addAttribute("objectId",qrCodeInfo.getObjectId());
		return "qrcode/qrCodeInfoList";
	}
	
	/**
	 * @Description：二维码详情列表数据
	 * @author chen
	 */
	@Log("获取二维码详情列表数据")
	@RequestMapping("list")
	@ResponseBody
	public Grid list(QrCodeInfo qrCodeInfo, GridParam param) {
		return qrCodeInfoService.findPage(qrCodeInfo, param);
	}
	/**
	 * @Description：二维码详情表单页面--新增/编辑
	 * @author chen
	 */
	@Limit(key = "qrcode/qrCodeInfoform", period = 30, count = 5, name = "二维码详情-新增/编辑页面", prefix = "limit")
	@Log("打开二维码详情表单页面--新增/编辑")
	@RequestMapping(value = "form")
	public String form(QrCodeInfo qrCodeInfo, ModelMap model) {
			qrCodeInfo = qrCodeInfoService.get(qrCodeInfo.getId());
		model.addAttribute("qrCodeInfo", qrCodeInfo);
		return "qrcode/qrCodeInfoForm";
	}
	/**
	 * @Description：二维码详情新增/编辑 保存方法
	 * @author chen
	 */
	@Limit(key = "qrcode/qrCodeInfosaveQrCodeInfo", period = 30, count = 5, name = "二维码详情-保存页面", prefix = "limit")
	@Log("新增/编辑二维码详情")
	@RequestMapping("saveQrCodeInfo")
	public String saveQrCodeInfo(QrCodeInfo qrCodeInfo, ModelMap model){
		try{
			qrCodeInfoService.save(qrCodeInfo);
		}catch(Exception e){
			log.error("保存失败！ msg={}", e.getMessage(), e);

			model.addAttribute("error", "保存失败！");
			return form(qrCodeInfo, model);
		}
		return successPath;
	}
	/**
	 * @Description：二维码详情数据删除方法
	 * @author chen
	 */
	@Limit(key = "qrcode/qrCodeInfodelQrCodeInfo", period = 30, count = 5, name = "二维码详情-删除", prefix = "limit")
	@Log("删除二维码详情")
	@RequestMapping("delQrCodeInfo")
	@ResponseBody
	public Json delQrCodeInfo(QrCodeInfo qrCodeInfo){
		Json json = new Json();
		try{
			qrCodeInfoService.delete(qrCodeInfo);
			json.setSuccess(true);
		}catch(Exception e){
			log.error("删除失败！ msg={}", e.getMessage(), e);

			json.setSuccess(false);
			json.setMsg("删除失败！");
		}
		return json;
	}
	/**
	 * 本地订单数据统计导出数据
	 *
	 * @return
	 */
	@RequestMapping(value = "export1", method = RequestMethod.GET)
	@ResponseBody
	public String exportFile1(HttpServletRequest request, QrCodeInfo qrCodeInfo, HttpServletResponse response) {
		try {
			String fileName = "二维码数据统计" + DateUtils.getDate("yyyyMMddHHmmss") + ".xlsx";

			List<QrCodeInfo> list = qrCodeInfoService.findList(qrCodeInfo);

			new ExportExcel("二维码数据统计", QrCodeInfo.class).setDataList(list).write(response, fileName).dispose();
			return null;
		} catch (Exception e) {
			request.setAttribute("error", "导出数据失败");
		}
		return null;
	}

}