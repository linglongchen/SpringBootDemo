package com.chunqiu.mrjuly.modules.install.controller;

import com.chunqiu.mrjuly.common.annotation.Log;
import com.chunqiu.mrjuly.common.persistence.BaseController;
import com.chunqiu.mrjuly.common.utils.OssUtils.OSSClientUtils;
import com.chunqiu.mrjuly.common.vo.Grid;
import com.chunqiu.mrjuly.common.vo.GridParam;
import com.chunqiu.mrjuly.common.vo.Json;
import com.chunqiu.mrjuly.modules.install.model.PrizeInfo;
import com.chunqiu.mrjuly.modules.install.service.PrizeInfoService;
import lombok.extern.slf4j.Slf4j;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * 奖品设置
 */
@Slf4j
@Controller
@RequestMapping(value = "${adminPath}/install/prizeInfo")
public class PrizeInfoController extends BaseController {

	@Autowired
	private PrizeInfoService prizeInfoService;

	/**
	 * 奖品设置列表页面
	 * @return
	 */
	@Log("登录奖品设置页面")
	@RequestMapping("index")
	@RequiresPermissions("install:prizeInfo:view")
	public String index(PrizeInfo prizeInfo, ModelMap model){
		PrizeInfo prizeInfo1 =  prizeInfoService.findType(prizeInfo);
		model.addAttribute("prizeInfo1",prizeInfo1);
		if (prizeInfo1 != null){
			if (prizeInfo1.getPrizeType() == 2){
				model.addAttribute("prizeType", "开始抽奖");
			}else if (prizeInfo1.getPrizeType() == 3){
				model.addAttribute("prizeType", "暂停抽奖");
			}
			model.addAttribute("type", prizeInfo1.getPrizeType());
		}else {
			model.addAttribute("prizeType", "开始抽奖");
			model.addAttribute("type", 2);
		}

		return "install/prizeInfoList";
	}

	/**
	 * 奖品设置列表数据
	 * @param prizeInfo
	 * @param param
	 * @return
	 */
	@Log("查询奖品设置列表")
	@RequestMapping("list")
	@ResponseBody
	@RequiresPermissions("install:prizeInfo:view")
	public Grid list(PrizeInfo prizeInfo, GridParam param) {
		return prizeInfoService.findPage(prizeInfo, param);
	}

	/**
	 * @Description：奖品设置页面--新增/编辑
	 * @author wcf
	 */
	@Log("登录抽奖设置新增/编辑页面")
	@RequestMapping(value = "form")
	@RequiresPermissions("install:prizeInfo:view")
	public String form(PrizeInfo prizeInfo, ModelMap model){
		if (prizeInfo.getPrize() == null && prizeInfo.getId() != null){
			prizeInfo = prizeInfoService.get(prizeInfo.getId());
		}
		model.addAttribute("prizeInfo",prizeInfo);
		return "install/prizeInfoForm";
	}

	/**
	 * @Description：奖品设置新增/编辑 保存方法
	 * @author wcf
	 */
	@Log("保存奖品设置")
	@RequestMapping("savePrizeInfo")
	@RequiresPermissions("install:prizeInfo:edit")
	public String saveShopType(PrizeInfo prizeInfo, ModelMap model){
		try{
			//oss图片上传
			String imgUrl =	OSSClientUtils.ossUploadPictures(prizeInfo.getPrizeImg());
			prizeInfo.setPrizeImg(imgUrl);
			prizeInfoService.save(prizeInfo);
		}catch(Exception e){
			//log.error("保存失败！ msg={}", e.getMessage(), e);
			e.printStackTrace();
			model.addAttribute("error", "保存失败！");
			return form(prizeInfo, model);
		}
		return successPath;
	}


	/**
	 * 开始抽奖/暂停抽奖
	 * @param prizeInfo
	 * @return
	 */
	@Log("开始抽奖/暂停抽奖")
	@RequestMapping("isPut")
	@ResponseBody
	@RequiresPermissions("install:prizeInfo:edit")
	public Json isPut(PrizeInfo prizeInfo){
		Json json = new Json();
		try{
			prizeInfoService.updateType(prizeInfo);
			json.setSuccess(true);
		}catch(Exception e){
			json.setSuccess(false);
			json.setMsg("操作失败！");
		}
		return json;
	}



}
