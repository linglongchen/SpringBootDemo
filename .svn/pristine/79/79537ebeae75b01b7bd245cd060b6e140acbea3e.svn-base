package com.chunqiu.mrjuly.modules.lyhoteldevicerelation.service;

import com.chunqiu.mrjuly.common.persistence.CrudService;
import com.chunqiu.mrjuly.common.utils.IDUtil;
import com.chunqiu.mrjuly.common.vo.Grid;
import com.chunqiu.mrjuly.common.vo.GridParam;
import com.chunqiu.mrjuly.modules.hotelinfo.model.HotelInfo;
import com.chunqiu.mrjuly.modules.lyhoteldevicerelation.dao.LyHotelDeviceRelationDao;
import com.chunqiu.mrjuly.modules.lyhoteldevicerelation.model.LyClientExport;
import com.chunqiu.mrjuly.modules.lyhoteldevicerelation.model.LyCodeExport;
import com.chunqiu.mrjuly.modules.lyhoteldevicerelation.model.LyHotelDeviceRelation;
import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;
import org.springframework.stereotype.Service;

import javax.annotation.Resource;
import java.util.List;

/**
 * 外壳编号Service 1.5版本
 * @author 周天
 * @version 2019-06-11
 */
@Service
public class LyHotelDeviceRelationService extends CrudService<LyHotelDeviceRelationDao, LyHotelDeviceRelation, Long> {
	@Resource
	private LyHotelDeviceRelationDao dao;

	/**
	 * 保存数据（插入或更新）
	 * @param entity
	 */
	public void save(LyHotelDeviceRelation entity) {
		if (entity.getIsNewRecord()){
			entity.setId(IDUtil.nextId());

			entity.preInsert();
			dao.insert(entity);
		}else{
			entity.preUpdate();
			dao.update(entity);
		}
	}


	/**
	 * 导入设备外壳编号
	 * @param lyCodeExportList
	 * @return
	 */
	public  int insertHotelCodeList(List<LyCodeExport> lyCodeExportList){
		return dao.insertHotelCodeList(lyCodeExportList);
	}


	/**
	 * 查询所有酒店
	 * @return
	 */
	public  List<HotelInfo> hotelCodeList(){
		return dao.hotelCodeList();
	}


	/**
	 * 多条关联
	 * @param lyHotelDeviceRelationList
	 * @return
	 */
	public int insertHotelCodeIdByList(List<LyHotelDeviceRelation> lyHotelDeviceRelationList,LyHotelDeviceRelation lyHotelDeviceRelation){
		return dao.insertHotelCodeIdByList(lyHotelDeviceRelationList,lyHotelDeviceRelation);
	}


	/**
	 * 解除关联
	 * @param lyHotelDeviceRelation
	 * @return
	 */
	public int updateHotelIdById(LyHotelDeviceRelation lyHotelDeviceRelation){
		return dao.updateHotelIdById(lyHotelDeviceRelation);
	}

	/**
	 * @param
	 * @return
	 * @description 查询全部设备管理并返回列表数据
	 * @author
	 * @date
	 */
	public Grid allFindPage(LyHotelDeviceRelation entity, GridParam param) {
		Grid grid = new Grid();
		Page page = PageHelper.offsetPage(param.getOffset(), param.getLimit(), true);
		dao.allFindPage(entity);
		grid.setRows(page.getResult());
		grid.setTotal(page.getTotal());
		return grid;
	}

	/**
	 * 激活休眠设备
	 * @param lyHotelDeviceRelation
	 * @return
	 */
	public  int updateDeviceStatusById(LyHotelDeviceRelation lyHotelDeviceRelation){
		return dao.updateDeviceStatusById(lyHotelDeviceRelation);
	}

	/**
	 * @param
	 * @return
	 * @description 查询客户端设备管理并返回列表数据
	 * @author
	 * @date
	 */
	public Grid clientFindPage(LyHotelDeviceRelation entity, GridParam param) {
		Grid grid = new Grid();
		Page page = PageHelper.offsetPage(param.getOffset(), param.getLimit(), true);
		dao.clientFindPage(entity);
		grid.setRows(page.getResult());
		grid.setTotal(page.getTotal());
		return grid;
	}


	/**
	 * 解除客房
	 * @param lyHotelDeviceRelation
	 * @return
	 */
	public int updateDeviceRelieveStatusById(LyHotelDeviceRelation lyHotelDeviceRelation){
		return dao.updateDeviceRelieveStatusById(lyHotelDeviceRelation);
	}


	/**
	 * 批量解除客房
	 * @param lyHotelDeviceRelationList
	 * @return
	 */
	public int updateDeviceRelieveStatusByIdList(List<LyHotelDeviceRelation>lyHotelDeviceRelationList){
		return dao.updateDeviceRelieveStatusByIdList(lyHotelDeviceRelationList);
	}

	/**
	 * 判断是否有重复的房间号
	 * @param lyHotelDeviceRelation
	 * @return
	 */
	public LyHotelDeviceRelation getLyHotelDeviceRelationById(LyHotelDeviceRelation lyHotelDeviceRelation){
		return dao.getLyHotelDeviceRelationById(lyHotelDeviceRelation);
	}

	/**
	 * 关联客房号
	 * @param lyHotelDeviceRelation
	 * @return
	 */
	public int updateClientCodeById(LyHotelDeviceRelation lyHotelDeviceRelation){
		return dao.updateClientCodeById(lyHotelDeviceRelation);
	}

	/**
	 * 查询所有为绑定的客户端
	 * @param lyHotelDeviceRelation
	 * @return
	 */
	public List<LyClientExport> getClientExportListByHotelId(LyHotelDeviceRelation lyHotelDeviceRelation){
		return dao.getClientExportListByHotelId(lyHotelDeviceRelation);
	}

	/**
	 * 当前外壳编号是否绑定客房号
	 * @param lyHotelDeviceRelation
	 * @return
	 */
	public LyHotelDeviceRelation getClientNumberByDeviceCoding(LyHotelDeviceRelation lyHotelDeviceRelation){
		return dao.getClientNumberByDeviceCoding(lyHotelDeviceRelation);
	}


	/**
	 * 根据外壳编号更新客房号
	 * @param lyHotelDeviceRelation
	 * @return
	 */
	public int updateClientCodeByDeviceCoding(LyHotelDeviceRelation lyHotelDeviceRelation){
		return dao.updateClientCodeByDeviceCoding(lyHotelDeviceRelation);
	}


	/**
	 *查询酒店下的部门列表
	 * @param lyHotelDeviceRelation
	 * @return
	 */
	public  List<LyHotelDeviceRelation>getDepartmentListByHotelId(LyHotelDeviceRelation lyHotelDeviceRelation){
		return dao.getDepartmentListByHotelId(lyHotelDeviceRelation);
	}


	/**
	 * @param
	 * @return
	 * @description 查询服务端设备管理并返回列表数据
	 * @author
	 * @date
	 */
	public Grid serverFindPage(LyHotelDeviceRelation entity, GridParam param) {
		Grid grid = new Grid();
		Page page = PageHelper.offsetPage(param.getOffset(), param.getLimit(), true);
		dao.serverFindPage(entity);
		grid.setRows(page.getResult());
		grid.setTotal(page.getTotal());
		return grid;
	}


	/**
	 * 服务端解除部门
	 * @param lyHotelDeviceRelation
	 * @return
	 */
	public int updateServerRelieveById(LyHotelDeviceRelation lyHotelDeviceRelation){
		return dao.updateServerRelieveById(lyHotelDeviceRelation);
	}


	/**
	 * 根据酒店下的部门里是否有重复的部门号
	 * @param lyHotelDeviceRelation
	 * @return
	 */
	public LyHotelDeviceRelation getServerDepartmentNumerByHotelId(LyHotelDeviceRelation lyHotelDeviceRelation){
		return dao.getServerDepartmentNumerByHotelId(lyHotelDeviceRelation);
	}


	/**
	 * 更新部门号
	 * @param lyHotelDeviceRelation
	 * @return
	 */
	public int updateServerDepartmentCodeById(LyHotelDeviceRelation lyHotelDeviceRelation){
		return dao.updateServerDepartmentCodeById(lyHotelDeviceRelation);
	}


	/**
	 * 批量解除部门号
	 * @param lyHotelDeviceRelationList
	 * @return
	 */
	public int updateDepartmentsDismantledByIdList(List<LyHotelDeviceRelation>lyHotelDeviceRelationList){
		return dao.updateDepartmentsDismantledByIdList(lyHotelDeviceRelationList);
	}


	/**
	 * @param
	 * @return
	 * @description 查询酒店全部设备管理并返回列表数据
	 * @author
	 * @date
	 */
	public Grid allHotelListFindPage(LyHotelDeviceRelation entity, GridParam param) {
		Grid grid = new Grid();
		Page page = PageHelper.offsetPage(param.getOffset(), param.getLimit(), true);
		dao.allHotelListFindPage(entity);
		grid.setRows(page.getResult());
		grid.setTotal(page.getTotal());
		return grid;
	}


	/**
	 * 根据酒店id查询所有客房号
	 * @param lyHotelDeviceRelation
	 * @return
	 */
	public List<LyHotelDeviceRelation> getRoomsListByHotelId(LyHotelDeviceRelation lyHotelDeviceRelation){
		return dao.getRoomsListByHotelId(lyHotelDeviceRelation);
	}
}