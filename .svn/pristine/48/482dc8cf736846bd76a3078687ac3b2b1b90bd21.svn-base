package com.chunqiu.mrjuly.modules.advertisingorderday.controller;

import com.chunqiu.mrjuly.common.annotation.Log;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import lombok.extern.slf4j.Slf4j;

import com.chunqiu.mrjuly.common.vo.Grid;
import com.chunqiu.mrjuly.common.vo.GridParam;
import com.chunqiu.mrjuly.common.vo.Json;
import com.chunqiu.mrjuly.common.persistence.BaseController;
import com.chunqiu.mrjuly.modules.advertisingorderday.model.AdvertisingOrderDay;
import com.chunqiu.mrjuly.modules.advertisingorderday.service.AdvertisingOrderDayService;

/**
 * 我的订单Controller
 * @author 周天
 * @version 2019-05-13
 */
@Slf4j
@Controller
@RequestMapping(value = "${adminPath}/advertisingorderday/advertisingOrderDay")
public class AdvertisingOrderDayController extends BaseController {

	@Autowired
	private AdvertisingOrderDayService advertisingOrderDayService;

	/**
	 * @Description：我的订单列表页面
	 * @author 周天
	 */
	@Log("打开我的订单列表页面")
	@RequestMapping("index")
	@RequiresPermissions("advertisingorderday:advertisingOrderDay:view")
	public String index(){
		return "/advertisingorderday/advertisingOrderDayList";
	}

	/**
	 * @Description：我的订单列表数据
	 * @author 周天
	 */
	@Log("获取我的订单列表数据")
	@RequestMapping("list")
	@ResponseBody
	@RequiresPermissions("advertisingorderday:advertisingOrderDay:view")
	public Grid list(AdvertisingOrderDay advertisingOrderDay, GridParam param) {
		return advertisingOrderDayService.findPage(advertisingOrderDay, param);
	}
	/**
	 * @Description：我的订单表单页面--新增/编辑
	 * @author 周天
	 */
	@Log("打开我的订单表单页面--新增/编辑")
	@RequestMapping(value = "form")
	@RequiresPermissions("advertisingorderday:advertisingOrderDay:view")
	public String form(AdvertisingOrderDay advertisingOrderDay, ModelMap model) {
			advertisingOrderDay = advertisingOrderDayService.get(advertisingOrderDay.getId());

		model.addAttribute("advertisingOrderDay", advertisingOrderDay);
		return "/advertisingorderday/advertisingOrderDayForm";
	}
	/**
	 * @Description：我的订单新增/编辑 保存方法
	 * @author 周天
	 */
	@Log("新增/编辑我的订单")
	@RequestMapping("saveAdvertisingOrderDay")
	@RequiresPermissions("advertisingorderday:advertisingOrderDay:save")
	public String saveAdvertisingOrderDay(AdvertisingOrderDay advertisingOrderDay, ModelMap model){
		try{
			advertisingOrderDayService.save(advertisingOrderDay);
		}catch(Exception e){
			log.error("保存失败！ msg={}", e.getMessage(), e);

			model.addAttribute("error", "保存失败！");
			return form(advertisingOrderDay, model);
		}
		return successPath;
	}
	/**
	 * @Description：我的订单数据删除方法
	 * @author 周天
	 */
	@Log("删除我的订单")
	@RequestMapping("delAdvertisingOrderDay")
	@ResponseBody
	@RequiresPermissions("advertisingorderday:advertisingOrderDay:del")
	public Json delAdvertisingOrderDay(AdvertisingOrderDay advertisingOrderDay){
		Json json = new Json();
		try{
			advertisingOrderDayService.delete(advertisingOrderDay);
			json.setSuccess(true);
		}catch(Exception e){
			log.error("删除失败！ msg={}", e.getMessage(), e);

			json.setSuccess(false);
			json.setMsg("删除失败！");
		}
		return json;
	}

}
