package com.chunqiu.mrjuly.modules.mybill.controller;

import com.chunqiu.mrjuly.common.annotation.Limit;
import com.chunqiu.mrjuly.common.annotation.Log;
import com.chunqiu.mrjuly.common.persistence.BaseController;
import com.chunqiu.mrjuly.common.utils.UserUtils;
import com.chunqiu.mrjuly.common.vo.Grid;
import com.chunqiu.mrjuly.common.vo.GridParam;
import com.chunqiu.mrjuly.common.vo.Json;
import com.chunqiu.mrjuly.modules.mybill.model.MyBillInfo;
import com.chunqiu.mrjuly.modules.mybill.service.MyBillInfoService;
import lombok.extern.slf4j.Slf4j;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * 我的账单Controller
 *
 * @author chen
 * @version 2019-03-14
 */
@Slf4j
@Controller
@RequestMapping(value = "${adminPath}/mybill/myBillInfo")
public class MyBillInfoController extends BaseController {

    @Autowired
    private MyBillInfoService myBillInfoService;

    /**
     * @Description：我的账单列表页面
     * @author chen
     */
    @Limit(key = "mybill/myBillInfoindex", period = 30, count = 5, name = "我的账单列表页面", prefix = "limit")
    @Log("打开我的账单列表页面")
    @RequestMapping("index")
    @RequiresPermissions("mybill:myBillInfo:view")
    public String index() {
        return "mybill/myBillInfoList";
    }

    /**
     * @Description：我的账单列表数据
     * @author chen
     */
    @Limit(key = "mybill/myBillInfolist", period = 30, count = 5, name = "我的账单列表数据", prefix = "limit")
    @Log("获取我的账单列表数据")
    @RequestMapping("list")
    @ResponseBody
    @RequiresPermissions("mybill:myBillInfo:view")
    public Grid list(MyBillInfo myBillInfo, GridParam param) {
        Integer shopId = UserUtils.getUser().getBusinessId();
        myBillInfo.setShopId(shopId);
        return myBillInfoService.findPage(myBillInfo, param);
    }

    @Log("广告商我的账单")
    @RequestMapping("advertiseInfoMyBill")
    @RequiresPermissions("mybill:myBillInfo:view")
    public String advertiseInfoMyBill() {
        return "advertiserinfo/advertiseInfoMyBillList";
    }

    /**
     * @Description：我的账单列表数据
     * @author chen
     */
    @Log("获取我的账单列表数据")
    @RequestMapping("list2")
    @ResponseBody
    @RequiresPermissions("mybill:myBillInfo:view")
    public Grid list2(MyBillInfo myBillInfo, GridParam param) {
        Integer shopId = UserUtils.getUser().getBusinessId();
        myBillInfo.setShopId(shopId);
        return myBillInfoService.findPage2(myBillInfo, param);
    }

    /**
     * @Description：我的账单表单页面--新增/编辑
     * @author chen
     */
    @Limit(key = "mybill/myBillInfoform", period = 30, count = 5, name = "我的账单-新增/编辑页面", prefix = "limit")
    @Log("打开我的账单表单页面--新增/编辑")
    @RequestMapping(value = "form")
    @RequiresPermissions("mybill:myBillInfo:view")
    public String form(MyBillInfo myBillInfo, ModelMap model) {
        myBillInfo = myBillInfoService.get(myBillInfo.getId());
        model.addAttribute("myBillInfo", myBillInfo);
        return "mybill/myBillInfoForm";
    }

    /**
     * @Description：我的账单新增/编辑 保存方法
     * @author chen
     */
    @Limit(key = "mybill/myBillInfosaveMyBillInfo", period = 30, count = 5, name = "我的账单-保存页面", prefix = "limit")
    @Log("新增/编辑我的账单")
    @RequestMapping("saveMyBillInfo")
    @RequiresPermissions("mybill:myBillInfo:edit")
    public String saveMyBillInfo(MyBillInfo myBillInfo, ModelMap model) {
        try {
            myBillInfoService.save(myBillInfo);
        } catch (Exception e) {
            log.error("保存失败！ msg={}", e.getMessage(), e);

            model.addAttribute("error", "保存失败！");
            return form(myBillInfo, model);
        }
        return successPath;
    }

    /**
     * @Description：我的账单数据删除方法
     * @author chen
     */
    @Limit(key = "mybill/myBillInfodelMyBillInfo", period = 30, count = 5, name = "我的账单-删除", prefix = "limit")
    @Log("删除我的账单")
    @RequestMapping("delMyBillInfo")
    @ResponseBody
    @RequiresPermissions("mybill:myBillInfo:edit")
    public Json delMyBillInfo(MyBillInfo myBillInfo) {
        Json json = new Json();
        try {
            myBillInfoService.delete(myBillInfo);
            json.setSuccess(true);
        } catch (Exception e) {
            log.error("删除失败！ msg={}", e.getMessage(), e);

            json.setSuccess(false);
            json.setMsg("删除失败！");
        }
        return json;
    }

}
