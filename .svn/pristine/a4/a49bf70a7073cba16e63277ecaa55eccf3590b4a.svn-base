package com.chunqiu.mrjuly.modules.install.controller;

import com.chunqiu.mrjuly.common.annotation.Log;
import com.chunqiu.mrjuly.common.persistence.BaseController;
import com.chunqiu.mrjuly.common.utils.UserUtils;
import com.chunqiu.mrjuly.common.vo.Grid;
import com.chunqiu.mrjuly.common.vo.GridParam;
import com.chunqiu.mrjuly.common.vo.Json;
import com.chunqiu.mrjuly.modules.install.model.CouponInfo;
import com.chunqiu.mrjuly.modules.install.model.CouponUse;
import com.chunqiu.mrjuly.modules.install.model.CouponUserList;
import com.chunqiu.mrjuly.modules.install.service.CouponInfoService;
import com.chunqiu.mrjuly.modules.install.service.CouponUseService;
import com.chunqiu.mrjuly.modules.install.service.CouponUserListService;
import lombok.extern.slf4j.Slf4j;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.List;

/**
 * 优惠券管理
 */
@Slf4j
@Controller
@RequestMapping(value = "${adminPath}/install/coupon")
public class CouponInfoController extends BaseController {

    @Autowired
    private CouponInfoService couponInfoService;

    @Autowired
    private CouponUseService couponUseService;

    @Autowired
    private CouponUserListService couponUserListService;

    /**
     * 登陆到优惠券管理页面
     *
     * @return
     */
    @Log("登陆到优惠券管理页面")
    @RequestMapping("index")
    @RequiresPermissions("install:coupon:view")
    public String index() {
        return "install/couponInfoList";
    }

    /**
     * 初始换优惠券管理数据
     *
     * @param couponInfo
     * @param param
     * @return
     */
    @Log("初始换优惠券管理数据")
    @ResponseBody
    @RequestMapping("list")
    @RequiresPermissions("install:coupon:view")
    public Grid list(CouponInfo couponInfo, GridParam param) {
        return couponInfoService.findPage(couponInfo, param);
    }

    /**
     * 登录到新增页面
     *
     * @param couponInfo
     * @param model
     * @return
     */
    @Log("登录到新增页面")
    @RequestMapping(value = "form")
    @RequiresPermissions("install:coupon:view")
    public String form(CouponInfo couponInfo, ModelMap model) {
        if (couponInfo.getPreferentialQuota() == null && couponInfo.getId() != null) {
            couponInfo = couponInfoService.get(couponInfo.getId());
        }
        model.addAttribute("couponInfo", couponInfo);
        return "install/couponInfoistForm";
    }

    /**
     * 保存的方法
     *
     * @param couponInfo
     * @param model
     * @return
     */
    @Log("保存方法")
    @RequestMapping("save")
    @RequiresPermissions("install:coupon:edit")
    public String save(CouponInfo couponInfo, ModelMap model) {
        try {
            couponInfoService.save(couponInfo);
        } catch (Exception e) {
            model.addAttribute("error", "保存失败");
            return form(couponInfo, model);
        }
        return successPath;
    }

    /**
     * 删除优惠券的方法
     *
     * @param couponInfo
     * @return
     */
    @Log("删除优惠券")
    @ResponseBody
    @RequestMapping("delCoupon")
    @RequiresPermissions("install:coupon:edit")
    public Json delBank(CouponInfo couponInfo) {
        Json json = new Json();
        try {
            couponInfoService.delete(couponInfo);
            json.setSuccess(true);
        } catch (Exception e) {

            json.setSuccess(false);
            json.setMsg("删除失败！");
        }
        return json;
    }

    /**
     * 登录到优惠券编辑说明页面
     * @param couponUse
     * @param model
     * @return
     */
    @Log("登录优惠券编辑说明页面")
    @RequestMapping("edit")
    @RequiresPermissions("install:coupon:view")
    public String edit(CouponUse couponUse, ModelMap model) {
        /*couponUse = couponUseService.get(couponUse.getId());

        model.addAttribute("couponUse", couponUse);*/
        List<CouponUse> list = couponUseService.getAll(couponUse.getId());
        if (list.size() == 0) {
            model.addAttribute("couponExplain", "");
        } else {
            model.addAttribute("couponExplain", list.get(0).getCouponExplain());
            model.addAttribute("id", list.get(0).getId());

        }
        return "install/couponUse";
    }

    /**
     * 保存方法
     * @param couponUse
     * @param model
     * @return
     */
    @Log("保存优惠券编辑说明")
    @RequestMapping("saveUse")
    @RequiresPermissions("install:coupon:edit")
    public String save(CouponUse couponUse, ModelMap model) {
        String cid = couponUse.getCid();
        if (cid == null || cid == ""){
            couponUse.setId(null);
        }else {
            couponUse.setId(Integer.valueOf(cid));
        }
        try {
            couponUseService.saveList(couponUse);
        } catch (Exception e) {
            e.printStackTrace();
            model.addAttribute("error", "编辑失败！");
            return edit(couponUse, model);
        }
        return successPath;
    }

    @Log("保存优惠券编辑说明")
    @RequestMapping("insertCouponList")
    @RequiresPermissions("install:coupon:edit")
    public String insertCouponList(CouponInfo couponInfo) {
        couponInfoService.insertCouponList(couponInfo);
        return successPath;
    }

    /**
     * 登录到优惠券分配页面
     * @return
     */
    @Log("登陆到优惠券分配页面")
    @RequestMapping("userIndex")
    @RequiresPermissions("install:coupon:view")
    public String userIndex(CouponInfo couponInfo,ModelMap modelMap){
        modelMap.addAttribute("couponInfo",couponInfo);
        return "install/couponUserListFrom";
    }

    @Log("查询所有广告商和在线商家列表")
    @ResponseBody
    @RequestMapping("businessmenList")
    @RequiresPermissions("install:coupon:view")
    public Grid businessmenList(CouponInfo couponInfo, GridParam param){
        return couponInfoService.couponInfoList(couponInfo, param);
    }

    /**
     * 页面数据初始换
     * @param couponUserList
     * @param param
     * @return
     */
    @Log("数据初始换")
    @ResponseBody
    @RequestMapping("userList")
    @RequiresPermissions("install:coupon:view")
    public Grid userList(CouponUserList couponUserList, GridParam param){
        return couponUserListService.findPage(couponUserList, param);
    }

    @Log("登录在线商家我的优惠券页面")
    @RequestMapping("shopCouponIndex")
    @RequiresPermissions("install:coupon:view")
    public String shopCouponIndex(ModelMap modelMap) {
        //查询优惠券使用说明
        CouponInfo couponInfo = couponInfoService.couponInfo();
        modelMap.addAttribute("couponInfo",couponInfo);
        return "install/myCouponInfoShopForm";
    }

    @Log("登录广告商我的优惠券页面")
    @RequestMapping("advertiserCouponIndex")
    @RequiresPermissions("install:coupon:view")
    public String advertiserCouponIndex(ModelMap modelMap) {
        //查询优惠券使用说明
        CouponInfo couponInfo = couponInfoService.couponInfo();
        modelMap.addAttribute("couponInfo",couponInfo);
        return "install/myCouponInfoAdvertiserForm";
    }

    @Log("广告商/在线商家的优惠券列表")
    @ResponseBody
    @RequestMapping("myCouponList")
    @RequiresPermissions("install:coupon:view")
    public Grid myCouponList(CouponInfo couponInfo, GridParam param) {
        couponInfo.setObjectId(UserUtils.getUser().getBusinessId());
        return couponInfoService.couponInfoListById(couponInfo, param);
    }
}


