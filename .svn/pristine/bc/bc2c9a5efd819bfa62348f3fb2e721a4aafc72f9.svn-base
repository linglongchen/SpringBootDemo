package com.chunqiu.mrjuly.modules.install.controller;

import com.chunqiu.mrjuly.common.annotation.Log;
import com.chunqiu.mrjuly.common.persistence.BaseController;
import com.chunqiu.mrjuly.common.vo.Grid;
import com.chunqiu.mrjuly.common.vo.GridParam;
import com.chunqiu.mrjuly.common.vo.Json;
import com.chunqiu.mrjuly.modules.install.model.ShopType;
import com.chunqiu.mrjuly.modules.install.service.ShopTypeService;
import lombok.extern.slf4j.Slf4j;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * 商品类别设置
 */
@Slf4j
@Controller
@RequestMapping(value = "${adminPath}/install/shopType")
public class ShopTypeController extends BaseController{

    @Autowired
    private ShopTypeService shopTypeService;

    /**
     * 商家类别设置列表页面
     * @return
     */
    @Log("登录商家类别设置页面")
    @RequestMapping("index")
    @RequiresPermissions("install:shopType:view")
    public String index(){
        return "install/shopTypeList";
    }

    /**
     * 商家类别列表数据
     * @param shopType
     * @param param
     * @return
     */
    @Log("查询商家类别列表")
    @ResponseBody
    @RequestMapping("list")
    @RequiresPermissions("install:shopType:view")
    public Grid list(ShopType shopType, GridParam param){
        return shopTypeService.findPage(shopType, param);
    }

    /**
     * 新增商品类别的方法
     * @param shopType
     * @param model
     * @return
     */
    @Log("新增商品类别")
    @RequestMapping(value = "form")
    @RequiresPermissions("install:shopType:view")
    public String form(ShopType shopType, ModelMap model){
        if (shopType.getShopType() == null && shopType.getId() != null){
            shopType = shopTypeService.get(shopType.getId());
        }
        model.addAttribute("shopType",shopType);
        return "install/shopTypeForm";
    }

    /**
     * 保存商品类别方法
     * @param shopType
     * @param model
     * @return
     */
    @Log("保存商品类别")
    @RequestMapping("saveShopType")
    @RequiresPermissions("install:shopType:edit")
    public String saveShopType(ShopType shopType, ModelMap model){
        try{
            shopTypeService.save(shopType);
        }catch(Exception e){
            log.error("保存失败！ msg={}", e.getMessage(), e);

            model.addAttribute("error", "保存失败！");
            return form(shopType, model);
        }
        return successPath;
    }

    /**
     * 删除商家类别的方法
     * @param shopType
     * @return
     */
    @Log("删除商家类别")
    @ResponseBody
    @RequestMapping("delShopType")
    @RequiresPermissions("install:shopType:edit")
    public Json delShopType(ShopType shopType){
        Json json = new Json();
        try{
            shopTypeService.delete(shopType);
            json.setSuccess(true);
        }catch(Exception e){
            log.error("删除失败！ msg={}", e.getMessage(), e);
            json.setSuccess(false);
            json.setMsg("删除失败");
        }
        return json;
    }
}
