package com.chunqiu.mrjuly.modules.install.controller;

import com.chunqiu.mrjuly.common.annotation.Log;
import com.chunqiu.mrjuly.common.exception.ServiceException;
import com.chunqiu.mrjuly.common.persistence.BaseController;
import com.chunqiu.mrjuly.common.vo.Grid;
import com.chunqiu.mrjuly.common.vo.GridParam;
import com.chunqiu.mrjuly.common.vo.Json;
import com.chunqiu.mrjuly.modules.install.model.Bank;
import com.chunqiu.mrjuly.modules.install.service.BankService;
import lombok.extern.slf4j.Slf4j;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * 银行设置
 */
@Slf4j
@Controller
@RequestMapping(value = "${adminPath}/install/bank")
public class BankController extends BaseController {

	@Autowired
	private BankService bankService;

	/**
	 * 银行设置列表页面
	 * @return
	 */
	@Log("登录银行页面")
	@RequestMapping("index")
	@RequiresPermissions("install:bank:view")
	/*@RequiresPermissions("install:bank:view")*/
	public String index(){
		return "install/bankList";
	}

	/**
	 * 银行列表数据
	 * @param bank
	 * @param param
	 * @return
	 */
	@Log("查询银行列表")
	@RequestMapping("list")
	@ResponseBody
	@RequiresPermissions("install:bank:view")
	/*@RequiresPermissions("install:bank:view")*/
	public Grid list(Bank bank, GridParam param) {
		return bankService.findPage(bank, param);
	}

	/**
	 * 新增银行信息
	 * @param bank
	 * @param model
	 * @return
	 */
	@Log("登录银行新增/编辑页面")
	@RequestMapping(value = "form")
	@RequiresPermissions("install:bank:view")
	public String form(Bank bank, ModelMap model) {
		if(bank.getBankName() == null && bank.getId() != null){
			bank = bankService.get(bank.getId());
		}
		model.addAttribute("bank", bank);
		return "install/bankForm";
	}

	/**
	 * 银行新增/编辑保存
	 * @param bank
	 * @param model
	 * @return
	 */
	@Log("保存银行")
	@RequestMapping("saveBank")
	@RequiresPermissions("install:bank:edit")
	public String saveBank(Bank bank, ModelMap model){
		try{
			bankService.save(bank);
		}catch(Exception e){
			if(e instanceof ServiceException){
				model.addAttribute("error", "该银行已存在！");
			}else{
				model.addAttribute("error", "保存失败！");
			}
			return form(bank, model);
		}
		return successPath;
	}

	/**
	 * 删除银行信息的方法
	 * @param bank
	 * @return
	 */
	@Log("删除银行信息")
	@RequestMapping("delBank")
	@ResponseBody
	@RequiresPermissions("install:bank:edit")
	public Json delBank(Bank bank){
		Json json = new Json();
		try{
			bankService.delete(bank);
			json.setSuccess(true);
		}catch(Exception e){

			json.setSuccess(false);
			json.setMsg("删除失败！");
		}
		return json;
	}

}