package com.chunqiu.mrjuly.modules.install.controller;

import com.chunqiu.mrjuly.common.annotation.Log;
import com.chunqiu.mrjuly.common.persistence.BaseController;
import com.chunqiu.mrjuly.common.vo.Grid;
import com.chunqiu.mrjuly.common.vo.GridParam;
import com.chunqiu.mrjuly.modules.install.model.Notice;
import com.chunqiu.mrjuly.modules.install.service.NoticeInfoService;
import com.chunqiu.mrjuly.modules.install.service.NoticeService;
import lombok.extern.slf4j.Slf4j;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.transaction.interceptor.TransactionAspectSupport;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.List;


/**
 * 通知管理
 */
@Slf4j
@Controller
@RequestMapping(value = "${adminPath}/install/notice")
@Transactional
public class NoticeController extends BaseController{
    @Autowired
    private NoticeInfoService noticeInfoService;
    @Autowired
    private NoticeService noticeService;

    /**
     * 登录到通知页面
     * @return
     */
    @Log("登录到通知页面")
    @RequestMapping("index")
    @RequiresPermissions("install:notice:view")
    public String index(){
        return "install/notice1List";
    }

    /**
     * 初始化通知管理数据页面
     * @param notice
     * @param param
     * @return
     */
    @Log("通知页面初始换列表")
    @ResponseBody
    @RequestMapping("list")
    @RequiresPermissions("install:notice:view")
    public Grid list(Notice notice, GridParam param){
        return noticeService.findPage(notice, param);
    }

    /**
     * 登录到通知管理的新增/编辑页面
     * @param notice
     * @param model
     * @return
     */
    @Log("登录到新增/编辑页面")
    @RequestMapping(value = "form")
    @RequiresPermissions("install:notice:view")
    public String form(Notice notice, ModelMap model){
        if (notice.getNoticeTitle() == null && notice.getId() != null){
            notice = noticeService.get(notice.getId());
        }
        model.addAttribute("notice",notice);
        return "install/notice1Form";
    }

    /**
     * 保存方法
     * @param notice
     * @param model
     * @return
     */
    @Log("保存")
    @RequestMapping("save")
    @RequiresPermissions("install:notice:edit")
    public String save(Notice notice, ModelMap model){
        try{
            if (notice.getNoticeRoll() == null){
                model.addAttribute("error","请选择首页是否滚动");
                return form(notice, model);
            }
            if (notice.getTarget() == null){
                model.addAttribute("error","请选择发布对象");
                return form(notice, model);
            }


                List<Notice> noticeList = noticeService.noticeById(notice);
                notice.setNoticeList(noticeList);

            if (notice.getId() != null){
                notice.setTargetId(notice.getTargetId());
                notice.setType(2);
                notice.setTimeSn(notice.getTimeSn());
                noticeInfoService.updateObjectId(notice);
                notice.setId(null);
            }else {
                //时间戳
                notice.setTimeSn(System.currentTimeMillis()+"");
            }

            noticeService.save(notice);
        }catch(Exception e){
            TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();
            e.printStackTrace();
            model.addAttribute("error","保存失败");
            return form(notice, model);
        }
        return successPath;
    }

    /**
     * 查看详情
     * @param notice
     * @param model
     * @return
     */
    @Log("查看详情")
    @RequestMapping("details")
    @RequiresPermissions("install:notice:view")
    public String details(Notice notice, ModelMap model){
        notice = noticeService.get(notice.getId());
        model.addAttribute("notice",notice);
        if(notice.getTarget()==1){
            model.addAttribute("target", "酒店服务系统后台");
        }else if(notice.getTarget()==2){
            model.addAttribute("target", "在线商家系统后台");
        }else if(notice.getTarget()==3){
            model.addAttribute("target", "广告管理系统后台");
        }
        if(notice.getNoticeRoll()==1){
            model.addAttribute("noticeRoll", "是");
        }else if(notice.getNoticeRoll()==2){
            model.addAttribute("noticeRoll", "否");
        }
        return "install/notice1ListForm";
    }

}
