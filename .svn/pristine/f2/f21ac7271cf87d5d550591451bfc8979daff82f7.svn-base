package com.chunqiu.mrjuly.modules.hotelinfo.controller;

import java.util.ArrayList;
import java.util.List;

import com.chunqiu.mrjuly.common.annotation.Log;
import com.chunqiu.mrjuly.common.persistence.BaseController;
import com.chunqiu.mrjuly.common.utils.UserUtils;
import com.chunqiu.mrjuly.common.vo.Grid;
import com.chunqiu.mrjuly.common.vo.GridParam;
import com.chunqiu.mrjuly.common.vo.Json;
import com.chunqiu.mrjuly.modules.hotelinfo.model.DepartmentCategories;
import com.chunqiu.mrjuly.modules.hotelinfo.model.DepartmentInfoList;
import com.chunqiu.mrjuly.modules.hotelinfo.service.DepartmentCategoriesService;
import com.chunqiu.mrjuly.modules.hotelinfo.service.DepartmentInfoService;

import lombok.extern.slf4j.Slf4j;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * 部门商品类别Controller
 * @author 周天
 * @version 2019-03-06
 */
@Slf4j
@Controller
@RequestMapping(value = "${adminPath}/hotelinfo/departmentCategories")
public class DepartmentCategoriesController extends BaseController {

	@Autowired
	private DepartmentCategoriesService departmentCategoriesService;
	@Autowired
	private DepartmentInfoService departmentInfoService;

	/**
	 * @Description：部门商品类别列表页面
	 * @author 周天
	 */
	@Log("打开部门商品类别列表页面")
	@RequestMapping("index")
	@RequiresPermissions("hotelinfo:departmentCategories:view")
	public String index(){
		return "hotelinfo/departmentCategoriesList";
	}

	/**
	 * @Description：部门商品类别列表数据
	 * @author 周天
	 */
	@Log("获取部门商品类别列表数据")
	@RequestMapping("list")
	@ResponseBody
	@RequiresPermissions("hotelinfo:departmentCategories:view")
	public Grid list(DepartmentCategories departmentCategories, GridParam param) {
		departmentCategories.setHotelCodeId(UserUtils.getUser().getHotelCodeId());
		Grid grid = departmentCategoriesService.findPage(departmentCategories, param);
		List<DepartmentCategories> results = new ArrayList<DepartmentCategories>();
		List lists = grid.getRows();
		DepartmentCategories categories = null;
		DepartmentInfoList info = null;
		for (Object object : lists) {
			categories = (DepartmentCategories) object;
			info = departmentInfoService.get(categories.getDepartmentId());
			categories.setDepartmentName(info.getDepartmentName());
			results.add(categories);
		}
		grid.setRows(results);
		return grid;
	}
	/**
	 * @Description：部门商品类别表单页面--新增/编辑
	 * @author 周天
	 */
	@Log("打开部门商品类别表单页面--新增/编辑")
	@RequestMapping(value = "form")
	@RequiresPermissions("hotelinfo:departmentCategories:view")
	public String form(DepartmentCategories departmentCategories, ModelMap model) {
		Integer hotelId = UserUtils.getUser().getHotelCodeId();
		if (departmentCategories.getId() != null){
			departmentCategories = departmentCategoriesService.get(departmentCategories.getId());
		}
		DepartmentInfoList condition = new DepartmentInfoList();
		condition.setHotelCodeId(hotelId);
		List<DepartmentInfoList> departmentInfoList = departmentInfoService.findAll(condition);
		model.addAttribute("departmentInfoList", departmentInfoList);
		model.addAttribute("departmentCategories", departmentCategories);
		return "hotelinfo/departmentCategoriesForm";
	}
	/**
	 * @Description：部门商品类别新增/编辑 保存方法
	 * @author 周天
	 */
	@Log("新增/编辑部门商品类别")
	@RequestMapping("saveDepartmentCategories")
	@RequiresPermissions("hotelinfo:departmentCategories:edit")
	public String saveDepartmentCategories(DepartmentCategories departmentCategories, ModelMap model){
		try{
			departmentCategories.setHotelCodeId(UserUtils.getUser().getHotelCodeId());
			departmentCategoriesService.save(departmentCategories);
		}catch(Exception e){
			log.error("保存失败！ msg={}", e.getMessage(), e);

			model.addAttribute("error", "保存失败！");
			return form(departmentCategories, model);
		}
		return successPath;
	}
	/**
	 * @Description：部门商品类别数据删除方法
	 * @author 周天
	 */
	@Log("删除部门商品类别")
	@RequestMapping("delDepartmentCategories")
	@ResponseBody
	@RequiresPermissions("hotelinfo:departmentCategories:edit")
	public Json delDepartmentCategories(DepartmentCategories departmentCategories){
		Json json = new Json();
		try{
			departmentCategoriesService.delete(departmentCategories);
			json.setSuccess(true);
		}catch(Exception e){
			log.error("删除失败！ msg={}", e.getMessage(), e);

			json.setSuccess(false);
			json.setMsg("删除失败！");
		}
		return json;
	}

}
