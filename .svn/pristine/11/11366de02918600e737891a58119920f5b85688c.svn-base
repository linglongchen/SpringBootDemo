<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chunqiu.mrjuly.modules.install.dao.BankDao">

	<sql id="bankColumns">
		a.id AS "id",
		a.bank_name AS "bankName",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>

	<sql id="bankJoins">
	</sql>

	<select id="get" resultType="Bank">
		SELECT
		<include refid="bankColumns"/>
		FROM bank a
		<include refid="bankJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="Bank">
		SELECT
		<include refid="bankColumns"/>
		FROM bank a
		<include refid="bankJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="bankName != null and bankName != ''">
				AND a.bank_name LIKE
				<if test="dbName == 'oracle'">'%'||#{bankName}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{bankName}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{bankName},'%')</if>
			</if>
		</where>
		<choose>
			<when test="orderBy != null and orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.id DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="Bank">
		SELECT
		<include refid="bankColumns"/>
		FROM bank a
		<include refid="bankJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="orderBy != null and orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			order by a.id desc
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO bank(
		bank_name,
		create_by,
		create_date,
		update_by,
		update_date,
		del_flag
		) VALUES (
		#{bankName},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		#{delFlag}
		)
	</insert>

	<!-- 检测银行名称是否重复 -->
	<select id="checkBankName" resultType="int">
		select count(1) from bank a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="bankName != null and bankName != ''">
				and a.bank_name = #{bankName}
			</if>
			<if test="id != null">
				and id != #{id}
			</if>
		</where>
	</select>

	<update id="update">
		UPDATE bank
		<set>
			<if test="bankName != null and bankName != ''">
				bank_name = #{bankName},
			</if>
			<if test="updateBy != null and updateBy.id != null">
				update_by = #{updateBy.id},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate},
			</if>
			<if test="delFlag != null and delFlag != ''">
				del_flag = #{delFlag},
			</if>
		</set>
		WHERE id = #{id}
	</update>

	<update id="delete">
		UPDATE bank SET
		del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

</mapper>