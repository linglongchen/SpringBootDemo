package com.chunqiu.mrjuly.modules.lyhoteladvertprice.controller;

import com.chunqiu.mrjuly.common.annotation.Log;
import com.chunqiu.mrjuly.common.persistence.BaseController;
import com.chunqiu.mrjuly.common.vo.Grid;
import com.chunqiu.mrjuly.common.vo.GridParam;
import com.chunqiu.mrjuly.common.vo.Json;
import com.chunqiu.mrjuly.modules.hotelinfo.model.HotelInfo;
import com.chunqiu.mrjuly.modules.lyhoteladvertprice.model.LyHotelAdvertPrice;
import com.chunqiu.mrjuly.modules.lyhoteladvertprice.service.LyHotelAdvertPriceService;
import lombok.extern.slf4j.Slf4j;
import net.sf.json.JSONObject;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.ArrayList;
import java.util.List;

/**
 * 广告位价格Controller
 * @author 周天
 * @version 2019-06-17
 */
@Slf4j
@Controller
@RequestMapping(value = "${adminPath}/lyhoteladvertprice/lyHotelAdvertPrice")
public class LyHotelAdvertPriceController extends BaseController {

	@Autowired
	private LyHotelAdvertPriceService lyHotelAdvertPriceService;

	/**
	 * @Description：广告位价格列表页面
	 * @author 周天
	 */
	@Log("打开广告位价格列表页面")
	@RequestMapping("index")
	@RequiresPermissions("lyhoteladvertprice:lyHotelAdvertPrice:view")
	public String index(ModelMap modelMap){
		List<HotelInfo>hotelInfoList=lyHotelAdvertPriceService.getHotelNameList();
		modelMap.addAttribute("hotelInfoList",hotelInfoList);
		return "lyhoteladvertprice/lyHotelAdvertPriceList";
	}
	
	/**
	 * @Description：广告位价格列表数据
	 * @author 周天
	 */
    @Log("获取广告位价格列表数据")
	@RequestMapping("list")
	@ResponseBody
	@RequiresPermissions("lyhoteladvertprice:lyHotelAdvertPrice:view")
	public Grid list(LyHotelAdvertPrice lyHotelAdvertPrice, GridParam param) {
		return lyHotelAdvertPriceService.findPage(lyHotelAdvertPrice, param);
	}

	/**
	 * @Description：广告位价格列表数据
	 * @author 周天
	 */
	@Log("获取酒店广告位")
	@RequestMapping("advertisingSpaceList")
	@ResponseBody
	@RequiresPermissions("lyhoteladvertprice:lyHotelAdvertPrice:view")
	public Grid advertisingSpaceList(LyHotelAdvertPrice lyHotelAdvertPrice, GridParam param) {
		return lyHotelAdvertPriceService.spaceFindPage(lyHotelAdvertPrice, param);
	}

	/**
	 * @Description：广告位价格表单页面--编辑
	 * @author 周天
	 */
	@Log("打开广告位价格表单页面--编辑")
	@RequestMapping(value = "form")
	@RequiresPermissions("lyhoteladvertprice:lyHotelAdvertPrice:view")
	public String form(LyHotelAdvertPrice lyHotelAdvertPrice, ModelMap model) {
		lyHotelAdvertPrice = lyHotelAdvertPriceService.get(lyHotelAdvertPrice.getId());
		model.addAttribute("lyHotelAdvertPrice", lyHotelAdvertPrice);
		return "lyhoteladvertprice/lyHotelAdvertPriceForm";
	}

	/**
	 * @Description：广告位价格表单页面--新增
	 * @author 周天
	 */
	@Log("打开广告位价格表单页面--新增")
	@RequestMapping(value = "insertForm")
	@RequiresPermissions("lyhoteladvertprice:lyHotelAdvertPrice:view")
	public String insertForm(ModelMap model) {
		List<HotelInfo>hotelInfoList = lyHotelAdvertPriceService.getNotHotelNameList();
		model.addAttribute("hotelInfoList", hotelInfoList);
		return "lyhoteladvertprice/lyHotelAdvertPriceInsertForm";
	}

	/**
	 * @Description：广告位价格编辑 保存方法
	 * @author 周天
	 */
	@Log("编辑广告位价格")
	@RequestMapping("saveLyHotelAdvertPrice")
	@RequiresPermissions("lyhoteladvertprice:lyHotelAdvertPrice:save")
	public String saveLyHotelAdvertPrice(LyHotelAdvertPrice lyHotelAdvertPrice, ModelMap model){
		try{
			lyHotelAdvertPriceService.save(lyHotelAdvertPrice);
		}catch(Exception e){
			log.error("保存失败！ msg={}", e.getMessage(), e);
			model.addAttribute("error", "保存失败！");
			return form(lyHotelAdvertPrice, model);
		}
		return successPath;
	}


	/**
	 * @Description：广告位价格新增 保存方法
	 * @author 周天
	 */
	@Log("新增广告位价格")
	@RequestMapping("insertLyHotelAdvertPrice")
	@RequiresPermissions("lyhoteladvertprice:lyHotelAdvertPrice:save")
	public String insertLyHotelAdvertPrice(LyHotelAdvertPrice lyHotelAdvertPrice, ModelMap model){
		try{
			List<LyHotelAdvertPrice> lyHotelAdvertPriceList = strToList(lyHotelAdvertPrice.getList(),LyHotelAdvertPrice.class);
			lyHotelAdvertPriceService.insertHotelPriceByList(lyHotelAdvertPriceList);
		}catch(Exception e){
			log.error("保存失败！ msg={}", e.getMessage(), e);
			model.addAttribute("error", "保存失败！");
			return form(lyHotelAdvertPrice, model);
		}
		return successPath;
	}

	//对象转换为List集合
	private static <T> List<T> strToList(String str, Class<T> clazz) {
		net.sf.json.JSONArray json = net.sf.json.JSONArray.fromObject(str);
		JSONObject object = null;
		T t = null;
		List<T> list = new ArrayList<>();
		for (int i = 0; i < json.size(); i++) {
			object = JSONObject.fromObject(json.get(i));
			t = (T) JSONObject.toBean(object, clazz);
			list.add(t);
		}
		return list;
	}

	/**
	 * @Description：广告位价格数据删除方法
	 * @author 周天
	 */
	@Log("删除广告位价格")
	@RequestMapping("delLyHotelAdvertPrice")
	@ResponseBody
	@RequiresPermissions("lyhoteladvertprice:lyHotelAdvertPrice:del")
	public Json delLyHotelAdvertPrice(LyHotelAdvertPrice lyHotelAdvertPrice){
		Json json = new Json();
		try{
			lyHotelAdvertPriceService.delete(lyHotelAdvertPrice);
			json.setSuccess(true);
		}catch(Exception e){
			log.error("删除失败！ msg={}", e.getMessage(), e);

			json.setSuccess(false);
			json.setMsg("删除失败！");
		}
		return json;
	}

	/**
	 * @Description：更新酒店使用广告位状态
	 * @author 周天
	 */
	@Log("更新酒店使用广告位状态")
	@RequestMapping("updateHotelStatus")
	@ResponseBody
	@RequiresPermissions("lyhoteladvertprice:lyHotelAdvertPrice:save")
	public Json updateHotelStatus(LyHotelAdvertPrice lyHotelAdvertPrice){
			Json json = new Json();
		try{
			lyHotelAdvertPriceService.updateHotelStatusById(lyHotelAdvertPrice);
			json.setSuccess(true);
		}catch(Exception e){
			log.error("更新失败！ msg={}", e.getMessage(), e);
			json.setSuccess(false);
			json.setMsg("更新失败！");
		}
		return json;
	}

}