package com.chunqiu.mrjuly.modules.advertisement.controller;

import com.chunqiu.mrjuly.common.annotation.Limit;
import com.chunqiu.mrjuly.common.annotation.Log;
import com.chunqiu.mrjuly.common.persistence.BaseController;
import com.chunqiu.mrjuly.common.utils.UserUtils;
import com.chunqiu.mrjuly.common.vo.Grid;
import com.chunqiu.mrjuly.common.vo.GridParam;
import com.chunqiu.mrjuly.common.vo.Json;
import com.chunqiu.mrjuly.modules.advertisement.model.AdvertiserMasterInfo;
import com.chunqiu.mrjuly.modules.advertisement.service.AdvertiserMasterInfoService;
import lombok.extern.slf4j.Slf4j;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * 广告主管理Controller
 *
 * @author chen
 * @version 2019-04-18
 */
@Slf4j
@Controller
@RequestMapping(value = "${adminPath}/advertisement/advertiserMasterInfo")
public class AdvertiserMasterInfoController extends BaseController {

    @Autowired
    private AdvertiserMasterInfoService advertiserMasterInfoService;

    /**
     * @Description：广告主管理列表页面
     * @author chen
     */
    @Limit(key = "advertisement/advertiserMasterInfoindex", period = 30, count = 5, name = "广告主管理列表页面", prefix = "limit")
    @Log("打开广告主管理列表页面")
    @RequestMapping("index")
    @RequiresPermissions("advertisement:advertiserMasterInfo:view")
    public String index() {
        return "advertisement/advertiserMasterInfoList";
    }

    /**
     * @Description：广告主管理列表数据
     * @author chen
     */
    @Limit(key = "advertisement/advertiserMasterInfolist", period = 30, count = 5, name = "广告主管理列表数据", prefix = "limit")
    @Log("获取广告主管理列表数据")
    @RequestMapping("list")
    @ResponseBody
    @RequiresPermissions("advertisement:advertiserMasterInfo:view")
    public Grid list(AdvertiserMasterInfo advertiserMasterInfo, GridParam param) {
        advertiserMasterInfo.setAdvertiseInfoId(UserUtils.getUser().getBusinessId());
        return advertiserMasterInfoService.findPage(advertiserMasterInfo, param);
    }

    /**
     * @Description：广告主管理表单页面--新增/编辑
     * @author chen
     */
    @Limit(key = "advertisement/advertiserMasterInfoform", period = 30, count = 5, name = "广告主管理-新增/编辑页面", prefix = "limit")
    @Log("打开广告主管理表单页面--新增/编辑")
    @RequestMapping(value = "form")
    @RequiresPermissions("advertisement:advertiserMasterInfo:view")
    public String form(AdvertiserMasterInfo advertiserMasterInfo, ModelMap model) {
        advertiserMasterInfo = advertiserMasterInfoService.get(advertiserMasterInfo.getId());
        model.addAttribute("advertiserMasterInfo", advertiserMasterInfo);
        return "advertisement/advertiserMasterInfoForm";
    }

    /**
     * @Description：广告主管理新增/编辑 保存方法
     * @author chen
     */
    @Limit(key = "advertisement/advertiserMasterInfosaveAdvertiserMasterInfo", period = 30, count = 5, name = "广告主管理-保存页面", prefix = "limit")
    @Log("新增/编辑广告主管理")
    @RequestMapping("saveAdvertiserMasterInfo")
    @RequiresPermissions("advertisement:advertiserMasterInfo:edit")
    public String saveAdvertiserMasterInfo(AdvertiserMasterInfo advertiserMasterInfo, ModelMap model) {
        try {
            advertiserMasterInfoService.save(advertiserMasterInfo);
        } catch (Exception e) {
            log.error("保存失败！ msg={}", e.getMessage(), e);

            model.addAttribute("error", "保存失败！");
            return form(advertiserMasterInfo, model);
        }
        return successPath;
    }

    /**
     * @Description：广告主管理数据删除方法
     * @author chen
     */
    @Limit(key = "advertisement/advertiserMasterInfodelAdvertiserMasterInfo", period = 30, count = 5, name = "广告主管理-删除", prefix = "limit")
    @Log("删除广告主管理")
    @RequestMapping("delAdvertiserMasterInfo")
    @ResponseBody
    @RequiresPermissions("advertisement:advertiserMasterInfo:edit")
    public Json delAdvertiserMasterInfo(AdvertiserMasterInfo advertiserMasterInfo) {
        Json json = new Json();
        try {
            advertiserMasterInfoService.delete(advertiserMasterInfo);
            json.setSuccess(true);
        } catch (Exception e) {
            log.error("删除失败！ msg={}", e.getMessage(), e);

            json.setSuccess(false);
            json.setMsg("删除失败！");
        }
        return json;
    }

}