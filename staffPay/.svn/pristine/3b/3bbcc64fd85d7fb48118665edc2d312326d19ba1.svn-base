package com.chunqiu.mrjuly.modules.advertisement.controller;

import com.chunqiu.mrjuly.common.annotation.Limit;
import com.chunqiu.mrjuly.common.annotation.Log;
import com.chunqiu.mrjuly.common.persistence.BaseController;
import com.chunqiu.mrjuly.common.vo.Grid;
import com.chunqiu.mrjuly.common.vo.GridParam;
import com.chunqiu.mrjuly.common.vo.Json;
import com.chunqiu.mrjuly.modules.advertisement.model.BanAdvertisementType;
import com.chunqiu.mrjuly.modules.advertisement.service.BanAdvertisementTypeService;
import lombok.extern.slf4j.Slf4j;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * 禁播广告Controller
 *
 * @author chen
 * @version 2019-04-12
 */
@Slf4j
@Controller
@RequestMapping(value = "${adminPath}/advertisement/banAdvertisementType")
public class BanAdvertisementTypeController extends BaseController {

    @Autowired
    private BanAdvertisementTypeService banAdvertisementTypeService;

    /**
     * @Description：禁播广告列表页面
     * @author chen
     */
    @Limit(key = "advertisement/banAdvertisementTypeindex", period = 30, count = 5, name = "禁播广告列表页面", prefix = "limit")
    @Log("打开禁播广告列表页面")
    @RequestMapping("index")
    @RequiresPermissions("advertisement:banAdvertisementType:view")
    public String index() {
        return "/advertisement/banAdvertisementTypeList";
    }

    /**
     * @Description：禁播广告列表数据
     * @author chen
     */
    @Limit(key = "advertisement/banAdvertisementTypelist", period = 30, count = 5, name = "禁播广告列表数据", prefix = "limit")
    @Log("获取禁播广告列表数据")
    @RequestMapping("list")
    @ResponseBody
    @RequiresPermissions("advertisement:banAdvertisementType:view")
    public Grid list(BanAdvertisementType banAdvertisementType, GridParam param) {
        return banAdvertisementTypeService.findPage(banAdvertisementType, param);
    }

    /**
     * @Description：禁播广告表单页面--新增/编辑
     * @author chen
     */
    @Limit(key = "advertisement/banAdvertisementTypeform", period = 30, count = 5, name = "禁播广告-新增/编辑页面", prefix = "limit")
    @Log("打开禁播广告表单页面--新增/编辑")
    @RequestMapping(value = "form")
    @RequiresPermissions("advertisement:banAdvertisementType:view")
    public String form(BanAdvertisementType banAdvertisementType, ModelMap model) {
        banAdvertisementType = banAdvertisementTypeService.get(banAdvertisementType.getId());
        model.addAttribute("banAdvertisementType", banAdvertisementType);
        return "/advertisement/banAdvertisementTypeForm";
    }

    /**
     * @Description：禁播广告新增/编辑 保存方法
     * @author chen
     */
    @Limit(key = "advertisement/banAdvertisementTypesaveBanAdvertisementType", period = 30, count = 5, name = "禁播广告-保存页面", prefix = "limit")
    @Log("新增/编辑禁播广告")
    @RequestMapping("saveBanAdvertisementType")
    @RequiresPermissions("advertisement:banAdvertisementType:save")
    public String saveBanAdvertisementType(BanAdvertisementType banAdvertisementType, ModelMap model) {
        try {
            banAdvertisementTypeService.save(banAdvertisementType);
        } catch (Exception e) {
            log.error("保存失败！ msg={}", e.getMessage(), e);

            model.addAttribute("error", "保存失败！");
            return form(banAdvertisementType, model);
        }
        return successPath;
    }

    /**
     * @Description：禁播广告数据删除方法
     * @author chen
     */
    @Limit(key = "advertisement/banAdvertisementTypedelBanAdvertisementType", period = 30, count = 5, name = "禁播广告-删除", prefix = "limit")
    @Log("删除禁播广告")
    @RequestMapping("delBanAdvertisementType")
    @ResponseBody
    @RequiresPermissions("advertisement:banAdvertisementType:del")
    public Json delBanAdvertisementType(BanAdvertisementType banAdvertisementType) {
        Json json = new Json();
        try {
            banAdvertisementTypeService.delete(banAdvertisementType);
            json.setSuccess(true);
        } catch (Exception e) {
            log.error("删除失败！ msg={}", e.getMessage(), e);

            json.setSuccess(false);
            json.setMsg("删除失败！");
        }
        return json;
    }

}