package com.chunqiu.mrjuly.modules.advertisingcomplain.controller;

import com.chunqiu.mrjuly.common.annotation.Log;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import lombok.extern.slf4j.Slf4j;

import com.chunqiu.mrjuly.common.vo.Grid;
import com.chunqiu.mrjuly.common.vo.GridParam;
import com.chunqiu.mrjuly.common.vo.Json;
import com.chunqiu.mrjuly.common.persistence.BaseController;
import com.chunqiu.mrjuly.modules.advertisingcomplain.model.AdvertisingComplain;
import com.chunqiu.mrjuly.modules.advertisingcomplain.service.AdvertisingComplainService;

/**
 * 广告投诉Controller
 * @author qj
 * @version 2019-04-12
 */
@Slf4j
@Controller
@RequestMapping(value = "${adminPath}/advertisingcomplain/advertisingComplain")
public class AdvertisingComplainController extends BaseController {

	@Autowired
	private AdvertisingComplainService advertisingComplainService;
	
	/**
	 * @Description：广告投诉列表页面
	 * @author qj
	 */
	@Log("打开广告投诉列表页面")
	@RequestMapping("index")
	@RequiresPermissions("advertisingcomplain:advertisingComplain:view")
	public String index(){
		return "advertisingcomplain/advertisingComplainList";
	}
	
	/**
	 * @Description：广告投诉列表数据
	 * @author qj
	 */
	@Log("获取广告投诉列表数据")
	@RequestMapping("list")
	@ResponseBody
	@RequiresPermissions("advertisingcomplain:advertisingComplain:view")
	public Grid list(AdvertisingComplain advertisingComplain, GridParam param) {
		return advertisingComplainService.findPage(advertisingComplain, param);
	}
	/**
	 * @Description：广告投诉表单页面--新增/编辑
	 * @author qj
	 */
	@Log("打开广告投诉表单页面--新增/编辑")
	@RequestMapping(value = "form")
	@RequiresPermissions("advertisingcomplain:advertisingComplain:view")
	public String form(AdvertisingComplain advertisingComplain, ModelMap model) {
		advertisingComplain = advertisingComplainService.get(advertisingComplain.getId());
		model.addAttribute("advertisingComplain", advertisingComplain);
		return "advertisingcomplain/advertisingComplainForm";
	}
	/**
	 * @Description：广告投诉新增/编辑 保存方法
	 * @author qj
	 */
	@Log("新增/编辑广告投诉")
	@RequestMapping("saveAdvertisingComplain")
	@RequiresPermissions("advertisingcomplain:advertisingComplain:edit")
	public String saveAdvertisingComplain(AdvertisingComplain advertisingComplain, ModelMap model){
		try{
			advertisingComplainService.save(advertisingComplain);
		}catch(Exception e){
			log.error("保存失败！ msg={}", e.getMessage(), e);

			model.addAttribute("error", "保存失败！");
			return form(advertisingComplain, model);
		}
		return successPath;
	}
	/**
	 * @Description：广告投诉数据删除方法
	 * @author qj
	 */
	@Log("删除广告投诉")
	@RequestMapping("delAdvertisingComplain")
	@ResponseBody
	@RequiresPermissions("advertisingcomplain:advertisingComplain:edit")
	public Json delAdvertisingComplain(AdvertisingComplain advertisingComplain){
		Json json = new Json();
		try{
			advertisingComplainService.delete(advertisingComplain);
			json.setSuccess(true);
		}catch(Exception e){
			log.error("删除失败！ msg={}", e.getMessage(), e);

			json.setSuccess(false);
			json.setMsg("删除失败！");
		}
		return json;
	}

}