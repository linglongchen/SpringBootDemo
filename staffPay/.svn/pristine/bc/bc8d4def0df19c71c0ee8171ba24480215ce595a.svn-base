<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chunqiu.mrjuly.modules.devicematchinginfo.dao.DeviceMatchingInfoDao">

	<sql id="deviceMatchingInfoColumns">
		a.id AS "id",
		a.server_side_coding_id AS "serverSideCodingId",
		a.client_bianma_id AS "clientBianmaId",
		a.status AS "status",
		a.hotel_code_id AS "hotelCodeId"
	</sql>

	<sql id="deviceMatchingInfoJoins">
	</sql>

	<select id="get" resultType="DeviceMatchingInfo">
		SELECT
			<include refid="deviceMatchingInfoColumns"/>
		FROM device_matching_info a
		<include refid="deviceMatchingInfoJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="DeviceMatchingInfo">
		SELECT
		a.server_side_coding_id as "id",
		CONCAT(
		c.hotel_code,
		"-",
		d.equipment_name
		) as hotelCode,
		e.status,
		CONCAT(Substring(GROUP_CONCAT(CONCAT(
		c.hotel_code,
		"-",
		b.equipment_name
		) SEPARATOR ','),1,20),'.....') as clientBianma
		FROM
		device_matching_info  AS a
		LEFT JOIN (SELECT * from client_bianma_info WHERE type = 1 ) AS b ON a.client_bianma_id = b.id
		LEFT JOIN (SELECT * from client_bianma_info WHERE type = 2 ) AS d on a.server_side_coding_id = d.id
		LEFT JOIN hotel_unique_code AS c ON a.hotel_code_id = c.id
		left join unique_encoding as e on e.id = d.unique_id
		WHERE
		a.hotel_code_id = #{hotelCodeId}
		<if test="titleStr != null and titleStr != ''">
			AND (
			CONCAT(
			c.hotel_code,
			"-",
			d.equipment_name
			) LIKE CONCAT("%",#{titleStr},"%")
			or
			CONCAT(
			c.hotel_code,
			"-",
			b.equipment_name
			) LIKE CONCAT("%",#{titleStr},"%")
			)
		</if>
		GROUP BY a.server_side_coding_id
		<choose>
			<when test="orderBy != null and orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			order by a.id desc
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="DeviceMatchingInfo">
		SELECT
			<include refid="deviceMatchingInfoColumns"/>
		FROM device_matching_info a
		<include refid="deviceMatchingInfoJoins"/>
		<where>

		</where>
		<choose>
			<when test="orderBy != null and orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				order by a.id desc
			</otherwise>
		</choose>
	</select>

	<insert id="insertDevice" parameterType="list">
			INSERT INTO device_matching_info (
				`server_side_coding_id`,
				`client_bianma_id`,
				`status`,
				`hotel_code_id`,
				`is_communication`
			)
			VALUES
		<foreach collection ="list" item="item" index= "index" separator =",">
			(
				#{item.serverSideCodingId},
				#{item.clientBianmaId},
				1,
				#{item.hotelCodeId},
				1
			)
		</foreach >

	</insert>

	<update id="updateDeviceStatus" parameterType="list">
		UPDATE `client_bianma_info`
			SET
			 `status` = 1
		  WHERE
				id in
				(
		<foreach collection="list" item="item" index="index" open="" close="" separator=",">
			#{item.clientBianmaId}
		</foreach>
				)

	</update>



	<update id="update">
		UPDATE device_matching_info
		<set>
			<if test="serverSideCodingId != null">
				server_side_coding_id = #{serverSideCodingId},
			</if>
			<if test="clientBianmaId != null and clientBianmaId != ''">
				client_bianma_id = #{clientBianmaId},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="hotelCodeId != null">
				hotel_code_id = #{hotelCodeId},
			</if>
		</set>
		WHERE id = #{id}
	</update>

	<update id="delete">
		DELETE FROM device_matching_info
		WHERE id = #{id}
	</update>


	<select id="serverSideListById"  resultType="DeviceMatchingInfo">
		SELECT
			a.id,
		CONCAT(
					b.hotel_code,
					"-",
					a.equipment_name
					) as hotelCode

		FROM
			client_bianma_info AS a
		LEFT JOIN hotel_unique_code AS b ON a.equipment_number = b.id
		WHERE
			a.equipment_number = #{hotelCodeId}
			and a.type = #{type}
		<if test="type == 1">
			and  status = 0
			<choose>
				<when test="orderBy != null and orderBy != ''">
					ORDER BY ${page.orderBy}
				</when>
				<otherwise>
				</otherwise>
			</choose>
		</if>
	</select>

	<select id="hotelClientList" resultType="DeviceMatchingInfo">
		SELECT
		   	c.id as "id",
			a.id as "deviceMatchingInfoId",
			d. STATUS,
		CONCAT(
					b.hotel_code,
					"-",
					c.equipment_name
					) as hotelCode
		FROM
			device_matching_info AS a
		LEFT JOIN hotel_unique_code AS b ON a.hotel_code_id = b.id
		LEFT JOIN client_bianma_info as c on a.client_bianma_id = c.id
		left join  unique_encoding as d on d.id = c.unique_id
		WHERE
			server_side_coding_id = #{serverSideCodingId}
		<choose>
			<when test="orderBy != null and orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

	<update id="updateClientStatus">
		UPDATE `client_bianma_info`
		SET
		 `status` = 0
		WHERE
			id in
			(
		<foreach collection="list" item="item" index="index" open="" close="" separator=",">
			#{item.id}
		</foreach>
			)
	</update>

	<select id="findCommunicationPage" resultType="DeviceMatchingInfo">
		SELECT
			a.id,
			CONCAT(
				c.hotel_code,
				"-",
				d.equipment_name
			) as hotelCode,
				a.is_communication as "status",
				CONCAT(
				c.hotel_code,
				"-",
				b.equipment_name
			)  as clientBianma
		FROM
			device_matching_info  AS a
		LEFT JOIN (SELECT * from client_bianma_info WHERE type = 1 ) AS b ON a.client_bianma_id = b.id
		LEFT JOIN (SELECT * from client_bianma_info WHERE type = 2 ) AS d on a.server_side_coding_id = d.id
		LEFT JOIN hotel_unique_code AS c ON a.hotel_code_id = c.id
		WHERE
			a.hotel_code_id = #{hotelCodeId}
		<if test="titleStr != null and titleStr != ''">
			AND (
			CONCAT(
			c.hotel_code,
			"-",
			d.equipment_name
			) LIKE CONCAT("%",#{titleStr},"%")
			or
			CONCAT(
			c.hotel_code,
			"-",
			b.equipment_name
			) LIKE CONCAT("%",#{titleStr},"%")
			)
		</if>
		<if test="status != null ">
			and a.is_communication = #{status}
		</if>
		<choose>
			<when test="orderBy != null and orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

	<update id="updateMatchingStatus">
		UPDATE `device_matching_info`
		SET
		`is_communication` = #{deviceMatchingInfo.status}
		WHERE
		id in
		(
		<foreach collection="deviceMatchingInfoList" item="item" index="index" open="" close="" separator=",">
			#{item.id}
		</foreach>
		)
	</update>


	<delete id="delClient">
		delete from device_matching_info where id in
		<foreach collection="list" item="arr" index="no" open="(" separator="," close=")">
			#{arr.id}
		</foreach>

	</delete>
</mapper>
