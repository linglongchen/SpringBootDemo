package com.chunqiu.mrjuly.modules.install.controller;

import com.chunqiu.mrjuly.common.annotation.Log;
import com.chunqiu.mrjuly.common.persistence.BaseController;
import com.chunqiu.mrjuly.common.utils.UserUtils;
import com.chunqiu.mrjuly.common.vo.Grid;
import com.chunqiu.mrjuly.common.vo.GridParam;
import com.chunqiu.mrjuly.modules.adviertisement.service.AdviertisementTypeService;
import com.chunqiu.mrjuly.modules.install.model.Notification;
import com.chunqiu.mrjuly.modules.install.service.NotificationService;
import com.chunqiu.mrjuly.modules.mine.service.NewsService;
import lombok.extern.slf4j.Slf4j;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * 消息通知
 */
@Slf4j
@Controller
@RequestMapping(value = "${adminPath}/install/notification")
public class NotificationController extends BaseController{

    @Autowired
    private NotificationService notificationService;

    @Autowired
    private NewsService newsService;
    @Autowired
    private AdviertisementTypeService adviertisementTypeService;
    /**
     * 登录到广告消息通知
     * @return
     */
    @Log("登录消息通知页面")
    @RequestMapping("index")
    @RequiresPermissions("install:notification:view")
    public String index(){
        return "install/notification";
    }

    /**
     * 初始化广告端消息通知数据页面
     * @param notification
     * @param param
     * @return
     */
    @Log("消息通知初始换列表")
    @ResponseBody
    @RequestMapping("list")
    @RequiresPermissions("install:notification:view")
    public Grid list(Notification notification, GridParam param){
        notification.setObjectId(UserUtils.getUser().getBusinessId());
        return notificationService.findPage(notification, param);
    }

    @Log("消息公告初始换列表")
    @ResponseBody
    @RequestMapping("noticeList")
    @RequiresPermissions("install:notification:view")
    public Grid list3(Notification notification, GridParam param){
        notification.setObjectId(UserUtils.getUser().getBusinessId());
        return notificationService.findList2(notification, param);
    }

    @Log("广告通知查看详情")
    @RequestMapping("formm")
    @RequiresPermissions("install:notification:view")
    public String formm(Notification notification, ModelMap model) {
        adviertisementTypeService.updateReadById(notification);
        notification = notificationService.get(notification.getId());
        model.addAttribute("notification", notification);
        return "install/notificationForm1";
    }



    /**
     * 查看详情的方法
     * @param notification
     * @param model
     * @return
     */
    @Log("查看详情")
    @RequestMapping("form")
    @RequiresPermissions("install:notification:view")
    public String form(Notification notification, ModelMap model) {
        adviertisementTypeService.updateReadById(notification);
        if (notification.getTarget()==0){
            notification = notificationService.getMessage(notification.getId());
            if(notification.getNoticeForm()==1){
                model.addAttribute("noticeForm", notification.getCreateDate());
            }else if(notification.getNoticeForm()==2){
                model.addAttribute("noticeForm", notification.getScheduledReleaseTime());
            }
            model.addAttribute("notification", notification);
            return "install/notificationForm2";
        }else {
            notification = notificationService.get(notification.getId());
            if(notification.getNoticeForm()==1){
                model.addAttribute("noticeForm", notification.getCreateDate());
            }else if(notification.getNoticeForm()==2){
                model.addAttribute("noticeForm", notification.getScheduledReleaseTime());
            }
            model.addAttribute("notification", notification);
            return "install/notificationForm";
        }
    }

    /**
     * 登录本地服务平台消息
     * @return
     */
    @Log("登录本地服务平台消息页面")
    @RequestMapping("index1")
    @RequiresPermissions("install:notification:view")
    public String index1(){
        return "mine/news";
    }

    /**
     * 初始化本地服务平台消息
     * @param notification
     * @param param
     * @return
     */
    @Log("平台消息初始换列表")
    @ResponseBody
    @RequestMapping("list1")
    @RequiresPermissions("install:notification:view")
    public Grid list1(Notification notification, GridParam param){
        notification.setObjectId(UserUtils.getUser().getHotelCodeId());
        return newsService.findPage(notification, param);
    }

    @Log("平台消息初始换列表")
    @ResponseBody
    @RequestMapping("list2")
    @RequiresPermissions("install:notification:view")
    public Grid list2(Notification notification, GridParam param){
        notification.setObjectId(UserUtils.getUser().getHotelCodeId());
        return newsService.findPage1(notification, param);
    }




    @Log("酒店通知查看详情")
    @RequestMapping("form1")
    @RequiresPermissions("install:notification:view")
    public String form11(Notification notification, ModelMap model) {
        adviertisementTypeService.updateReadById(notification);
        notification = notificationService.get(notification.getId());
        model.addAttribute("notification", notification);
        return "mine/newsFrom";
    }

    @Log("酒店通知查看详情")
    @RequestMapping("form111")
    @RequiresPermissions("install:notification:view")
    public String form111(Notification notification, ModelMap model) {
        adviertisementTypeService.updateReadById(notification);
        notification = notificationService.get(notification.getId());
        model.addAttribute("notification", notification);
        if(notification.getNoticeRoll()==1){
            model.addAttribute("noticeRoll", "是");
        }else if(notification.getNoticeRoll()==2){
            model.addAttribute("noticeRoll", "否");
        }
        if(notification.getNoticeForm()==1){
            model.addAttribute("noticeForm", notification.getCreateDate());
        }else if(notification.getNoticeForm()==2){
            model.addAttribute("noticeForm", notification.getScheduledReleaseTime());
        }
        return "install/notificationForm";
    }

}
