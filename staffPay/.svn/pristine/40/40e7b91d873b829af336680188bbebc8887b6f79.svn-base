<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chunqiu.mrjuly.modules.record.dao.ShopRecordDao">

    <sql id="shopRecordColumns">
		a.id AS "id",
		a.shop_hotel_id AS "shopInfoId",
		a.result AS "result",
		a.user_id AS "userId"
	</sql>
    <sql id="shopInfoColumns">
		s.id AS "id",
		s.hotel_code_id AS "hotelCodeId",
		s.hotel_entry_adress AS "hotelEntryAdress",
		s.auditor_status AS "auditorStatus",
		s.shop_name AS "shopName",
		s.shop_number AS "shopNumber",
		s.shop_type AS "shopType",
		s.shop_address AS "shopAddress",
		s.shop_tel AS "shopTel",
		s.shop_lng AS "shopLng",
		s.shop_lat AS "shopLat",
		s.business_license_period AS "businessLicensePeriod",
		s.business_license_img AS "businessLicenseImg",
		s.code_clicks AS "codeClicks",
		s.shop_imgs AS "shopImgs",
		s.account AS "account",
		s.status AS "status",
		s.fixed_end_number AS "fixedEndNumber",
		s.create_date AS "createDate",
		s.create_by AS "createBy.id",
		s.update_date AS "updateDate",
		s.update_by AS "updateBy.id",
		s.remark AS "remark",
		h.lease_term AS "leaseTerm",
		h.ban_reason AS "banReason",
		s.distance_merchants AS "distanceMerchants",
		s.hotel_reason AS "hotelReason",
		s.system_num AS "systemNum"
	</sql>

    <sql id="shopRecordJoins">
        left join shop_hotel h on h.id=a.shop_hotel_id
		left join shop_info s on s.id=h.shop_id
		left join shop_type t on t.id=s.shop_type
		left join admin_user u on u.id=a.user_id
	</sql>

    <select id="get" resultType="ShopRecord">
        SELECT
        <include refid="shopRecordColumns"/>,
        <include refid="shopInfoColumns"/>,
        t.shop_type as "shopTypeName",
        u.name AS "userName",
        a.result_reason AS  "resultReason"
        FROM shop_record a
        <include refid="shopRecordJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="ShopRecord">
        SELECT
        <include refid="shopRecordColumns"/>,
        <include refid="shopInfoColumns"/>,
        t.shop_type as "shopTypeName",
        u.name AS "userName"
        FROM shop_record a
        <include refid="shopRecordJoins"/>
        <where>
            h.hotel_code_id=#{hotelCodeId}
            <if test="createTime != null and createTime !=''">
                and DATE_FORMAT(s.create_date,"%Y-%m-%d")=#{createTime}
            </if>
            <if test="shopInfoId != null">
                AND a.shop_info_id = #{shopInfoId}
            </if>
            <if test="result != null">
                AND a.result = #{result}
            </if>
            <if test="userId != null">
                AND a.user_id = #{userId}
            </if>
            <if test="shopTypeId != null">
                AND t.id = #{shopTypeId}
            </if>
        </where>
        <choose>
            <when test="orderBy != null and orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                 order by a.id desc
            </otherwise>
        </choose>
    </select>

    <select id="findAllList" resultType="ShopRecord">
        SELECT
        <include refid="shopRecordColumns"/>
        FROM shop_record a
        <include refid="shopRecordJoins"/>
        <where>

        </where>
        <choose>
            <when test="orderBy != null and orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
            order by a.id desc
            </otherwise>
        </choose>
    </select>

    <insert id="insert">
		INSERT INTO shop_record(
						shop_hotel_id,
						result,
						user_id,
						result_reason
		) VALUES (
						#{shopInfoId},
						#{result},
						#{userId},
						#{resultReason}
		)
	</insert>

    <update id="update">
        UPDATE shop_record
        <set>
            <if test="shopInfoId != null">
                shop_info_id = #{shopInfoId},
            </if>
            <if test="result != null">
                result = #{result},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="delete">
		DELETE FROM shop_record
		WHERE id = #{id}
	</update>
    <select id="recordPerson" resultType="User">
        SELECT
	    e.account AS "account",e.id AS "id"
        FROM
	    admin_role a
        LEFT JOIN admin_role c ON a.id = c.parent_id
        LEFT JOIN admin_user_role f ON f.role_id = c.id
        LEFT JOIN admin_user_role d ON d.role_id = a.id
        LEFT JOIN admin_user e ON e.id = f.uid
        LEFT JOIN admin_user b ON b.id = d.uid
        WHERE
	    b.id=#{id}
    </select>

</mapper>
