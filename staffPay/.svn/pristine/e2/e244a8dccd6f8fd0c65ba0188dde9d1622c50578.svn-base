package com.chunqiu.mrjuly.modules.advertisingcartday.controller;

import com.chunqiu.mrjuly.common.annotation.Limit;
import com.chunqiu.mrjuly.common.annotation.Log;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import lombok.extern.slf4j.Slf4j;

import com.chunqiu.mrjuly.common.vo.Grid;
import com.chunqiu.mrjuly.common.vo.GridParam;
import com.chunqiu.mrjuly.common.vo.Json;
import com.chunqiu.mrjuly.common.persistence.BaseController;
import com.chunqiu.mrjuly.modules.advertisingcartday.model.AdvertisingCartDay;
import com.chunqiu.mrjuly.modules.advertisingcartday.service.AdvertisingCartDayService;

/**
 * 我的购物车列表Controller
 * @author 周天
 * @version 2019-05-13
 */
@Slf4j
@Controller
@RequestMapping(value = "${adminPath}/advertisingcartday/advertisingCartDay")
public class AdvertisingCartDayController extends BaseController {

	@Autowired
	private AdvertisingCartDayService advertisingCartDayService;

	/**
	 * @Description：我的购物车列表列表页面
	 * @author 周天
	 */
	@Log("打开我的购物车列表列表页面")
	@RequestMapping("index")
	@RequiresPermissions("advertisingcartday:advertisingCartDay:view")
	public String index(){
		return "/advertisingcartday/advertisingCartDayList";
	}

	/**
	 * @Description：我的购物车列表列表数据
	 * @author 周天
	 */
	@Log("获取我的购物车列表列表数据")
	@RequestMapping("list")
	@ResponseBody
	@RequiresPermissions("advertisingcartday:advertisingCartDay:view")
	public Grid list(AdvertisingCartDay advertisingCartDay, GridParam param) {
		return advertisingCartDayService.findPage(advertisingCartDay, param);
	}
	/**
	 * @Description：我的购物车列表表单页面--新增/编辑
	 * @author 周天
	 */
	@Log("打开我的购物车列表表单页面--新增/编辑")
	@RequestMapping(value = "form")
	@RequiresPermissions("advertisingcartday:advertisingCartDay:view")
	public String form(AdvertisingCartDay advertisingCartDay, ModelMap model) {
			advertisingCartDay = advertisingCartDayService.get(advertisingCartDay.getId());
		model.addAttribute("advertisingCartDay", advertisingCartDay);
		return "/advertisingcartday/advertisingCartDayForm";
	}
	/**
	 * @Description：我的购物车列表新增/编辑 保存方法
	 * @author 周天
	 */
	@Log("新增/编辑我的购物车列表")
	@RequestMapping("saveAdvertisingCartDay")
	@RequiresPermissions("advertisingcartday:advertisingCartDay:save")
	public String saveAdvertisingCartDay(AdvertisingCartDay advertisingCartDay, ModelMap model){
		try{
			advertisingCartDayService.save(advertisingCartDay);
		}catch(Exception e){
			log.error("保存失败！ msg={}", e.getMessage(), e);

			model.addAttribute("error", "保存失败！");
			return form(advertisingCartDay, model);
		}
		return successPath;
	}
	/**
	 * @Description：我的购物车列表数据删除方法
	 * @author 周天
	 */
	@Log("删除我的购物车列表")
	@RequestMapping("delAdvertisingCartDay")
	@ResponseBody
	@RequiresPermissions("advertisingcartday:advertisingCartDay:del")
	public Json delAdvertisingCartDay(AdvertisingCartDay advertisingCartDay){
		Json json = new Json();
		try{
			advertisingCartDayService.delete(advertisingCartDay);
			json.setSuccess(true);
		}catch(Exception e){
			log.error("删除失败！ msg={}", e.getMessage(), e);

			json.setSuccess(false);
			json.setMsg("删除失败！");
		}
		return json;
	}


}
