package com.chunqiu.mrjuly.modules.shopinfo.controller;

import com.chunqiu.mrjuly.common.annotation.Log;
import com.chunqiu.mrjuly.common.persistence.BaseController;
import com.chunqiu.mrjuly.common.utils.OssUtils.OSSClientUtils;
import com.chunqiu.mrjuly.common.utils.UserUtils;
import com.chunqiu.mrjuly.modules.shopinfo.model.ShopRenovationInfo;
import com.chunqiu.mrjuly.modules.shopinfo.service.ShopRenovationInfoService;
import lombok.extern.slf4j.Slf4j;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;


/**
 * 店铺装修信息Controller
 *
 * @author wang
 * @version 2019-03-12
 */
@Slf4j
@Controller
@RequestMapping(value = "${adminPath}/shopinfo/shopRenovationInfo")
public class ShopRenovationInfoController extends BaseController {

    @Autowired
    private ShopRenovationInfoService shopRenovationInfoService;


    /**
     * 店铺装修页面
     * @param shopRenovationInfo
     * @param modelMap
     * @return
     */
    @Log("打开店铺装修页面")
    @RequestMapping("index")
    @RequiresPermissions("shopinfo:shopRenovationInfo:view")
    public String index(ShopRenovationInfo shopRenovationInfo, ModelMap modelMap) {
        shopRenovationInfo.setShopId(UserUtils.getUser().getBusinessId());
        shopRenovationInfo = shopRenovationInfoService.get(shopRenovationInfo);
        modelMap.addAttribute("shopRenovationInfo",shopRenovationInfo);
        return "shopinfo/shopRenovationInfoList";
    }


    /**
     * 店铺装修编辑保存
     * @param shopRenovationInfo
     * @param model
     * @return
     */
    @Log("保存店铺装修信息")
    @RequestMapping("save")
    @RequiresPermissions("shopinfo:shopRenovationInfo:edit")
    public String save(ShopRenovationInfo shopRenovationInfo, ModelMap model){
       try{
            shopRenovationInfo.setShopId(UserUtils.getUser().getBusinessId());
            String logo = OSSClientUtils.ossUploadPictures(shopRenovationInfo.getBusinessLogo());
            shopRenovationInfo.setBusinessLogo(logo);
           String code = OSSClientUtils.ossUploadPictures(shopRenovationInfo.getBusinessCode());
           shopRenovationInfo.setBusinessCode(code);
            shopRenovationInfoService.save(shopRenovationInfo);
        }catch(Exception e){
            model.addAttribute("error", "保存失败！");
            return index(shopRenovationInfo, model);
        }
        return "shopinfo/shopRenovationInfoList";

    }

    @Log("打开地图")
    @RequestMapping(value = "map")
    @RequiresPermissions("shopinfo:shopRenovationInfo:view")
    public String map(ShopRenovationInfo shopRenovationInfo, ModelMap model) {
        return "map/shopMap";
    }


    @Log("地图返回页面")
    @RequestMapping("returnMap")
    public String returnMap(ShopRenovationInfo shopRenovationInfo, ModelMap modelMap){
        modelMap.addAttribute("shopRenovationInfo",shopRenovationInfo);
        return successPath6;
    }


}
